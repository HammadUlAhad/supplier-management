@model IEnumerable<SupplierManagement.Models.ViewModels.SupplierRateViewModel>

@{
    ViewData["Title"] = "Supplier Rates";
    var supplierId = ViewBag.SupplierId;
    var supplierName = Model.FirstOrDefault()?.SupplierName ?? "Unknown Supplier";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Rates for @supplierName</h1>
    <div>
        <a class="btn btn-outline-info me-2" asp-controller="Supplier" asp-action="Details" asp-route-id="@supplierId">View Supplier</a>
        <a class="btn btn-primary me-2" asp-action="Create" asp-route-supplierId="@supplierId">Add Rate</a>
        <a class="btn btn-outline-secondary" asp-action="Index">All Rates</a>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Rate</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Duration</th>
                                    <th>Status</th>
                                    <th>Created By</th>
                                    <th>Created On</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderByDescending(r => r.RateStartDate))
                                {
                                    <tr>
                                        <td>
                                            <strong class="text-success h5">@Html.DisplayFor(modelItem => item.Rate)</strong>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.RateStartDate)</td>
                                        <td>
                                            @if (item.RateEndDate.HasValue)
                                            {
                                                @Html.DisplayFor(modelItem => item.RateEndDate)
                                            }
                                            else
                                            {
                                                <span class="text-muted">Ongoing</span>
                                            }
                                        </td>
                                        <td>
                                            @if (item.RateEndDate.HasValue)
                                            {
                                                var duration = (item.RateEndDate.Value - item.RateStartDate).Days;
                                                <span>@duration days</span>
                                            }
                                            else
                                            {
                                                var duration = (DateTime.Now - item.RateStartDate).Days;
                                                <span>@duration days (ongoing)</span>
                                            }
                                        </td>
                                        <td>
                                            @if (!item.RateEndDate.HasValue || item.RateEndDate.Value > DateTime.Now)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Inactive</span>
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.CreatedByUser)</td>
                                        <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                                        <td>
                                            <a class="btn btn-sm btn-info" asp-action="Details" asp-route-id="@item.SupplierRateId">View</a>
                                            <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.SupplierRateId">Edit</a>
                                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.SupplierRateId">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-chart-line fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No rates found for this supplier</h4>
                        <p class="text-muted">Get started by adding the first rate for @supplierName.</p>
                        <a asp-action="Create" asp-route-supplierId="@supplierId" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Add First Rate
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Model.Any())
{
    var currentRate = Model.Where(r => !r.RateEndDate.HasValue || r.RateEndDate.Value > DateTime.Now)
                           .OrderByDescending(r => r.RateStartDate)
                           .FirstOrDefault();
    
    if (currentRate != null)
    {
        <div class="alert alert-info mt-3" role="alert">
            <i class="fas fa-info-circle"></i>
            <strong>Current Rate:</strong> @currentRate.Rate 
            (effective from @currentRate.RateStartDate.ToString("dd/MM/yyyy"))
        </div>
    }
}

@if (Model.Any())
{
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Rate Statistics</h5>
                    <dl class="row">
                        <dt class="col-sm-6">Total Rates:</dt>
                        <dd class="col-sm-6">@Model.Count()</dd>
                        
                        <dt class="col-sm-6">Active Rates:</dt>
                        <dd class="col-sm-6">@Model.Count(r => !r.RateEndDate.HasValue || r.RateEndDate.Value > DateTime.Now)</dd>
                        
                        <dt class="col-sm-6">Highest Rate:</dt>
                        <dd class="col-sm-6">@Model.Max(r => r.Rate)</dd>
                        
                        <dt class="col-sm-6">Lowest Rate:</dt>
                        <dd class="col-sm-6">@Model.Min(r => r.Rate)</dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Quick Actions</h5>
                    <div class="d-grid gap-2">
                        <a asp-controller="Supplier" asp-action="Details" asp-route-id="@supplierId" class="btn btn-outline-info">
                            <i class="fas fa-building"></i> View Supplier Details
                        </a>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-list"></i> View All Supplier Rates
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
