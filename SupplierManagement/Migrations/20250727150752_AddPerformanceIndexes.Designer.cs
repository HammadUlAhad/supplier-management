// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplierManagement.Database;

#nullable disable

namespace SupplierManagement.Migrations
{
    [DbContext(typeof(SupplierManagementDbContext))]
    [Migration("20250727150752_AddPerformanceIndexes")]
    partial class AddPerformanceIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupplierManagement.Models.Domain.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SupplierId");

                    b.HasIndex("Name");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Address = "1, Main Street, The District, City1, XXX-AADA",
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "BestValue"
                        },
                        new
                        {
                            SupplierId = 2,
                            Address = "2, Industrial Ave, Business Park, City2, YYY-BBBB",
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Quality Supplies"
                        },
                        new
                        {
                            SupplierId = 3,
                            Address = "3, Commerce St, Trade Center, City3, ZZZ-CCCC",
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Premium Partners"
                        });
                });

            modelBuilder.Entity("SupplierManagement.Models.Domain.SupplierRate", b =>
                {
                    b.Property<int>("SupplierRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierRateId"));

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RateEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("RateStartDate")
                        .HasColumnType("date");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierRateId");

                    b.HasIndex("RateEndDate");

                    b.HasIndex("RateStartDate");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierRates");

                    b.HasData(
                        new
                        {
                            SupplierRateId = 1,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 10m,
                            RateEndDate = new DateTime(2015, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RateStartDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            SupplierRateId = 2,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 20m,
                            RateEndDate = new DateTime(2015, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RateStartDate = new DateTime(2015, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            SupplierRateId = 3,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 10m,
                            RateEndDate = new DateTime(2015, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RateStartDate = new DateTime(2015, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            SupplierRateId = 4,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 25m,
                            RateStartDate = new DateTime(2015, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1
                        },
                        new
                        {
                            SupplierRateId = 5,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 100m,
                            RateStartDate = new DateTime(2016, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2
                        },
                        new
                        {
                            SupplierRateId = 6,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 30m,
                            RateEndDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RateStartDate = new DateTime(2016, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 3
                        },
                        new
                        {
                            SupplierRateId = 7,
                            CreatedByUser = "admin.user",
                            CreatedOn = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rate = 30m,
                            RateStartDate = new DateTime(2017, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("SupplierManagement.Models.Domain.SupplierRate", b =>
                {
                    b.HasOne("SupplierManagement.Models.Domain.Supplier", "Supplier")
                        .WithMany("SupplierRates")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SupplierManagement.Models.Domain.Supplier", b =>
                {
                    b.Navigation("SupplierRates");
                });
#pragma warning restore 612, 618
        }
    }
}
